线性表
malloc:动态内存分配函数
free:释放内存

#include<stdio.h>
#include<stdlib.h>  //库函数
int main()
{
    int i,*p;   //p:基地址
    p=(int *)malloc(10*sizeof(int));    //动态分配10个int型变量的内存空间
    for(i=0;i<10;i++)
    {
        p[i]=i;
        pritnf("%d\t",p[i]);
    }
    printf("\n");
    free(p);    //释放内存
    return 0;
}


ElemType:线性表元素类型
LIST_INIT_SIZE:初始容量
LISTINCREMENT:动态分配空间
elem:基地址
listsize:当前容量
length:当前长度
Sqlist:顺序表


插入元素:
if(i<1 || i<L.length+1) return ERROR;
for(j=L.length;j>=i;j--)    j:保存的总长度,j的值大于要插入的元素位序
    L.elem[j]=L.elem[j-1];  先要把需要位置空出来,下标依次向后移动一位
    L.elem[i-1]=e;          插入到空出来位置的元素里，i-1:因为位序从1开始，下标从0开始的
    L.length++;
    return OK;


删除元素:
if(i<1 || i>L.length) return ERROR;
e=L.elem[i-1];
for(j=i;j<L.length;j++)
    L.elem[j-1]=L.elem[j];
    L.length--;
    return OK;

定位操作:顺序查找
Status LocateElem_Sq(SqList L,ElemType e){
    int i;
    for(i=0;i<L.length;i++)
        if(L.elem[i]==e) return (i+1);
    return ERROR;
}



















